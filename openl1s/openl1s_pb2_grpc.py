# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
try:
    import openl1s_pb2 as openl1s__pb2
except ImportError:
    from openl1s import openl1s_pb2 as openl1s__pb2


class OpenapiStub(object):
    """Description missing in models

    For all RPCs defined in this service, API Server SHOULD provide JSON
    representation of `Error` message as an error string upon failure, ensuring
    name of enum constants (instead of value) for `kind` property is present
    in the representation
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SetConfig = channel.unary_unary(
                '/openl1s.Openapi/SetConfig',
                request_serializer=openl1s__pb2.SetConfigRequest.SerializeToString,
                response_deserializer=openl1s__pb2.SetConfigResponse.FromString,
                )
        self.GetVersion = channel.unary_unary(
                '/openl1s.Openapi/GetVersion',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=openl1s__pb2.GetVersionResponse.FromString,
                )


class OpenapiServicer(object):
    """Description missing in models

    For all RPCs defined in this service, API Server SHOULD provide JSON
    representation of `Error` message as an error string upon failure, ensuring
    name of enum constants (instead of value) for `kind` property is present
    in the representation
    """

    def SetConfig(self, request, context):
        """Create configuration for L1S
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVersion(self, request, context):
        """Description missing in models
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OpenapiServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SetConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.SetConfig,
                    request_deserializer=openl1s__pb2.SetConfigRequest.FromString,
                    response_serializer=openl1s__pb2.SetConfigResponse.SerializeToString,
            ),
            'GetVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVersion,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=openl1s__pb2.GetVersionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'openl1s.Openapi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Openapi(object):
    """Description missing in models

    For all RPCs defined in this service, API Server SHOULD provide JSON
    representation of `Error` message as an error string upon failure, ensuring
    name of enum constants (instead of value) for `kind` property is present
    in the representation
    """

    @staticmethod
    def SetConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/openl1s.Openapi/SetConfig',
            openl1s__pb2.SetConfigRequest.SerializeToString,
            openl1s__pb2.SetConfigResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/openl1s.Openapi/GetVersion',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            openl1s__pb2.GetVersionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
